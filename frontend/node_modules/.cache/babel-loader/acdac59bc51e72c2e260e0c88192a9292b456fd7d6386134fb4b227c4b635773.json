{"ast":null,"code":"var _jsxFileName = \"D:\\\\POC\\\\network-packet-analysis\\\\network-packet-analysis\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchStats, fetchCapture, fetchPackets, uploadPcap } from './api';\nimport Dashboard from './components/Dashboard';\nimport PacketTable from './components/PacketTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [stats, setStats] = useState({});\n  const [packets, setPackets] = useState([]);\n  const [loading, setLoading] = useState(false);\n  async function refresh() {\n    setLoading(true);\n    const s = await fetchStats();\n    setStats(s.stats || {});\n    const p = await fetchPackets(200);\n    setPackets(p.packets || []);\n    setLoading(false);\n  }\n  useEffect(() => {\n    refresh();\n  }, []);\n  async function handleCapture(mode = 'mock') {\n    setLoading(true);\n    const res = await fetchCapture(10, mode);\n    setPackets(res.packets || []);\n    const s = await fetchStats();\n    setStats(s.stats || {});\n    setLoading(false);\n  }\n  async function handleUpload(e) {\n    const file = e.target.files[0];\n    if (!file) return;\n    setLoading(true);\n    const res = await uploadPcap(file);\n    setPackets(res.packets || []);\n    setLoading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Network Packet Analysis Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCapture('mock'),\n          children: \"Capture (mock)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCapture('real'),\n          children: \"Capture (real)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".pcap\",\n          onChange: handleUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: refresh,\n          children: \"Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(Dashboard, {\n        stats: stats,\n        total: Object.values(stats).reduce((a, b) => a + b, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PacketTable, {\n        packets: packets,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qn8smnaLbCQUsVFCQiRtwkVOJi8=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","fetchStats","fetchCapture","fetchPackets","uploadPcap","Dashboard","PacketTable","jsxDEV","_jsxDEV","App","_s","stats","setStats","packets","setPackets","loading","setLoading","refresh","s","p","handleCapture","mode","res","handleUpload","e","file","target","files","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","accept","onChange","total","Object","values","reduce","a","b","_c","$RefreshReg$"],"sources":["D:/POC/network-packet-analysis/network-packet-analysis/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchStats, fetchCapture, fetchPackets, uploadPcap } from './api';\nimport Dashboard from './components/Dashboard';\nimport PacketTable from './components/PacketTable';\n\nexport default function App(){\n  const [stats, setStats] = useState({});\n  const [packets, setPackets] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  async function refresh(){\n    setLoading(true);\n    const s = await fetchStats();\n    setStats(s.stats || {});\n    const p = await fetchPackets(200);\n    setPackets(p.packets || []);\n    setLoading(false);\n  }\n\n  useEffect(()=>{ refresh(); }, []);\n\n  async function handleCapture(mode='mock'){\n    setLoading(true);\n    const res = await fetchCapture(10, mode);\n    setPackets(res.packets || []);\n    const s = await fetchStats();\n    setStats(s.stats || {});\n    setLoading(false);\n  }\n\n  async function handleUpload(e){\n    const file = e.target.files[0];\n    if(!file) return;\n    setLoading(true);\n    const res = await uploadPcap(file);\n    setPackets(res.packets || []);\n    setLoading(false);\n  }\n\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <h1>Network Packet Analysis Dashboard</h1>\n        <div className=\"controls\">\n          <button onClick={()=>handleCapture('mock')}>Capture (mock)</button>\n          <button onClick={()=>handleCapture('real')}>Capture (real)</button>\n          <input type=\"file\" accept=\".pcap\" onChange={handleUpload} />\n          <button onClick={refresh}>Refresh</button>\n        </div>\n      </header>\n      <main>\n        <Dashboard stats={stats} total={Object.values(stats).reduce((a,b)=>a+b,0)} />\n        <PacketTable packets={packets} loading={loading} />\n      </main>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}